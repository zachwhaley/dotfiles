#!/bin/sh
#
# bootstrap shell

cd "$(dirname "$0")"
DOTFILES_ROOT=$(pwd)

set -e
set +o noclobber

user() {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success() {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail() {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n\n"
  exit
}

check() {
  local cmd=$1
  if ! command which $cmd 1>/dev/null; then
    fail "$cmd must be installed"
  fi
}

link_file() {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
    if [[ "$overwrite_all" == "false" && "$backup_all" == "false" && "$skip_all" == "false" ]]; then
      local currentSrc="$(readlink $dst)"
      if [[ "$currentSrc" == "$src" ]]; then
        skip=true;
      else
        user "File already exists: $(basename "$dst"), what do you want to do? \
[s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -rs -k 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [[ "$overwrite" == "true" ]]; then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [[ "$backup" == "true" ]]; then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [[ "$skip" == "true" ]]; then
      success "skipped $src"
    fi
  fi

  if [[ "$skip" != "true" ]]; then
    ln -s "$src" "$dst"
    success "linked $src to $dst"
  fi
}

stow_dotfiles() {
  check stow
  for src in $(find . -maxdepth 1 -type d ! -name '.*' -exec basename {} \;); do
    if stow $src; then
      success "stowed $src"
    else
      fail "failed to stow $src"
    fi
  done
}

setup_mac() {
  os=$(uname -s)
  if [[ "$os" == "Darwin" ]]; then
    defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "~/.config/iterm2"
    defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
    success "setup macos configs\n"
  fi
}

set_shell() {
  local shell=$1
  check $shell
  user "set shell to $shell\n"
  if chsh -s $(cat /etc/shells | grep $shell); then
    success "shell set"
  else
    fail "failed to set shell"
  fi
}

echo ''

stow_dotfiles
setup_mac
set_shell zsh

success "done!\n"
